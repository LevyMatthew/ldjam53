[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://ccgtm57uknbsd"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/perlin3d_fractal.gd" id="1_c6win"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/perlin4d_fractal.gd" id="2_e8k7q"]

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_g5bq5"]
constant = Vector3(0.5, 1, 0.5)

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_ktcke"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dtqgu"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_lud2g"]
default_input_values = [1, 6, 2, Vector3(2, 2, 0), 3, 2.0, 4, 0.8, 5, 0.5, 6, 0.6, 7, Vector3(0.5, 0.5, 0), 8, 0.0]
initialized = true
script = ExtResource("1_c6win")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ursyk"]
default_input_values = [1, 6, 2, Vector3(2, 2, 0), 3, 2.0, 4, 0.8, 5, 0.5, 6, 0.6, 7, Vector3(0.5, 0.5, 0), 8, 0.0, 9, 0.0]
initialized = true
script = ExtResource("2_e8k7q")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q1pmp"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ha7ax"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_lio3v"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_djdlo"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_r8q3a"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 1, 0.5), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_nu7hm"]
default_input_values = [0, 0.0, 1, 2.0, 2, -0.5]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;



// FractalPerlinNoise3D
float _perlin3dNoiseFractalFunc(vec3 P) {
	vec3 Pi0 = floor(P);
	vec3 Pi1 = Pi0 + vec3(1.0);
	Pi0 = Pi0 - floor(Pi0 * (1.0 / 289.0)) * 289.0;
	Pi1 = Pi1 - floor(Pi1 * (1.0 / 289.0)) * 289.0;
	vec3 Pf0 = fract(P);
	vec3 Pf1 = Pf0 - vec3(1.0);
	vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
	vec4 iy = vec4(Pi0.yy, Pi1.yy);
	vec4 iz0 = vec4(Pi0.z);
	vec4 iz1 = vec4(Pi1.z);
	
	vec4 ixy = (((((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy))-
		floor(((((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy)*(1.0/289.0))*289.0;
	vec4 ixy0 = ((((ixy + iz0)*34.0)+1.0)*(ixy + iz0))-floor((((ixy + iz0)*34.0)+1.0)*(ixy + iz0)*(1.0/289.0))*289.0;
	vec4 ixy1 = ((((ixy + iz1)*34.0)+1.0)*(ixy + iz1))-floor((((ixy + iz1)*34.0)+1.0)*(ixy + iz1)*(1.0/289.0))*289.0;
	
	vec4 gx0 = ixy0 * (1.0 / 7.0);
	vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
	gx0 = fract(gx0);
	vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
	vec4 sz0 = step(gz0, vec4(0.0));
	gx0 -= sz0 * (step(0.0, gx0) - 0.5);
	gy0 -= sz0 * (step(0.0, gy0) - 0.5);
	
	vec4 gx1 = ixy1 * (1.0 / 7.0);
	vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
	gx1 = fract(gx1);
	vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
	vec4 sz1 = step(gz1, vec4(0.0));
	gx1 -= sz1 * (step(0.0, gx1) - 0.5);
	gy1 -= sz1 * (step(0.0, gy1) - 0.5);
	
	vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
	vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
	vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
	vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
	vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
	vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
	vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
	vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);
	
	vec4 norm0 = 1.79284291400159 - 0.85373472095314 * vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110));
	g000 *= norm0.x;
	g010 *= norm0.y;
	g100 *= norm0.z;
	g110 *= norm0.w;
	vec4 norm1 = 1.79284291400159 - 0.85373472095314 * vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111));
	g001 *= norm1.x;
	g011 *= norm1.y;
	g101 *= norm1.z;
	g111 *= norm1.w;
	
	float n000 = dot(g000, Pf0);
	float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
	float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
	float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
	float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
	float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
	float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
	float n111 = dot(g111, Pf1);
	
	vec3 fade_xyz = Pf0 * Pf0 * Pf0 * (Pf0 * (Pf0 * 6.0 - 15.0) + 10.0);
	vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
	vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
	float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); 
	return 2.2 * n_xyz;
}
float _perlinNoise3DFBM(vec2 _uv_pn3fbm, int _oct_pn3fbm, vec2 _per_pn3fbm, float _lac_pn3fbm,
		float _persist_pn3fbm, float _rot_pn3fbm, float _ampl_pn3fbm, vec2 _shift_pn3fbm, float _time_pn3fbm) {
	float _v = 0.0;
	float _a = _ampl_pn3fbm;
	mat2 _r0t = mat2(vec2(cos(_rot_pn3fbm), sin(_rot_pn3fbm)), vec2(-sin(_rot_pn3fbm), cos(_rot_pn3fbm)));
	for (int i = 0; i < _oct_pn3fbm; ++i) {
		_v += _a * _perlin3dNoiseFractalFunc(vec3(_uv_pn3fbm * _per_pn3fbm, _time_pn3fbm));
		_uv_pn3fbm = _r0t * _uv_pn3fbm * _lac_pn3fbm + _shift_pn3fbm;
		_a *= _persist_pn3fbm;
	}
	return (min(_v, 1.0) + 1.0) * 0.5;
}

void fragment() {
// Input:4
	vec3 n_out4p0 = NORMAL;


// VectorDecompose:7
	float n_out7p0 = n_out4p0.x;
	float n_out7p1 = n_out4p0.y;
	float n_out7p2 = n_out4p0.z;


// Input:5
	float n_out5p0 = TIME;


// VectorCompose:6
	vec4 n_out6p0 = vec4(n_out7p0, n_out7p1, n_out7p2, n_out5p0);


	float n_out2p0;
// FractalPerlinNoise3D:2
	int n_in2p1 = 6;
	vec3 n_in2p2 = vec3(2.00000, 2.00000, 0.00000);
	float n_in2p3 = 2.00000;
	float n_in2p4 = 0.80000;
	float n_in2p5 = 0.50000;
	float n_in2p6 = 0.60000;
	vec3 n_in2p7 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out2p0 = _perlinNoise3DFBM(vec3(n_out6p0.xyz).xy, int(n_in2p1), n_in2p2.xy, n_in2p3, n_in2p4, n_in2p5, n_in2p6, n_in2p7.xy, n_out5p0);
	}


// Vector3Constant:10
	vec3 n_out10p0 = vec3(0.500000, 1.000000, 0.500000);


// Mix:8
	vec3 n_in8p2 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out8p0 = mix(vec3(n_out2p0), n_out10p0, n_in8p2);


// MultiplyAdd:9
	float n_in9p1 = 2.00000;
	float n_in9p2 = -0.50000;
	float n_out9p0 = (n_out2p0 * n_in9p1) + n_in9p2;


// Output:0
	ALBEDO = n_out8p0;
	ALPHA = n_out9p0;
	EMISSION = n_out10p0;


}
"
nodes/fragment/0/position = Vector2(880, 240)
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_lud2g")
nodes/fragment/2/position = Vector2(40, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_ursyk")
nodes/fragment/3/position = Vector2(280, 660)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_q1pmp")
nodes/fragment/4/position = Vector2(-1000, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_ha7ax")
nodes/fragment/5/position = Vector2(-900, 360)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorCompose_lio3v")
nodes/fragment/6/position = Vector2(-380, 200)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorDecompose_djdlo")
nodes/fragment/7/position = Vector2(-680, 180)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_r8q3a")
nodes/fragment/8/position = Vector2(340, 220)
nodes/fragment/9/node = SubResource("VisualShaderNodeMultiplyAdd_nu7hm")
nodes/fragment/9/position = Vector2(640, 340)
nodes/fragment/10/node = SubResource("VisualShaderNodeVec3Constant_g5bq5")
nodes/fragment/10/position = Vector2(-20, 520)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorCompose_ktcke")
nodes/fragment/11/position = Vector2(-380, 720)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorOp_dtqgu")
nodes/fragment/12/position = Vector2(560, 580)
nodes/fragment/connections = PackedInt32Array(5, 0, 6, 3, 4, 0, 7, 0, 7, 2, 6, 2, 7, 1, 6, 1, 7, 0, 6, 0, 5, 0, 2, 8, 2, 0, 8, 0, 2, 0, 9, 0, 9, 0, 0, 1, 10, 0, 8, 1, 10, 0, 0, 5, 5, 0, 11, 0, 11, 0, 12, 0, 6, 0, 2, 0, 8, 0, 0, 0, 11, 0, 3, 0, 3, 0, 12, 1)
